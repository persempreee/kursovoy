/*******************************************************************************
* Filename      : rstctlregisters.hpp
*
* Details       : RSTCTL. This header file is auto-generated for MSP432P401Y
*                 device.
*
*
*******************************************************************************/

#if !defined(RSTCTLREGISTERS_HPP)
#define RSTCTLREGISTERS_HPP

#include "rstctlbitsfield.hpp"  //for Bits Fields defs 
#include "registerbase.hpp"   //for RegisterBase
#include "register.hpp"       //for Register
#include "accessmode.hpp"     //for ReadMode, WriteMode, ReadWriteMode  

struct RSTCTL
{
  struct RSTCTLRSTCTL_RESET_REQBase {} ;

  struct RSTCTL_RESET_REQ : public RegisterBase<0xE0042000, 32, ReadWriteMode>
  {
    using SOFT_REQ = RSTCTL_RSTCTL_RESET_REQ_SOFT_REQ_Values<RSTCTL::RSTCTL_RESET_REQ, 0, 1, WriteMode, RSTCTLRSTCTL_RESET_REQBase> ;
    using HARD_REQ = RSTCTL_RSTCTL_RESET_REQ_HARD_REQ_Values<RSTCTL::RSTCTL_RESET_REQ, 1, 1, WriteMode, RSTCTLRSTCTL_RESET_REQBase> ;
    using RSTKEY = RSTCTL_RSTCTL_RESET_REQ_RSTKEY_Values<RSTCTL::RSTCTL_RESET_REQ, 8, 8, WriteMode, RSTCTLRSTCTL_RESET_REQBase> ;
  } ;

  template<typename... T> 
  using RSTCTL_RESET_REQPack  = Register<0xE0042000, 32, ReadWriteMode, RSTCTLRSTCTL_RESET_REQBase, T...> ;

  struct RSTCTLRSTCTL_HARDRESET_STATBase {} ;

  struct RSTCTL_HARDRESET_STAT : public RegisterBase<0xE0042004, 32, ReadMode>
  {
    using SRC0 = RSTCTL_RSTCTL_HARDRESET_STAT_SRC_Values<RSTCTL::RSTCTL_HARDRESET_STAT, 0, 1, ReadMode, RSTCTLRSTCTL_HARDRESET_STATBase> ;
    using SRC1 = RSTCTL_RSTCTL_HARDRESET_STAT_SRC_Values<RSTCTL::RSTCTL_HARDRESET_STAT, 1, 1, ReadMode, RSTCTLRSTCTL_HARDRESET_STATBase> ;
    using SRC2 = RSTCTL_RSTCTL_HARDRESET_STAT_SRC_Values<RSTCTL::RSTCTL_HARDRESET_STAT, 2, 1, ReadMode, RSTCTLRSTCTL_HARDRESET_STATBase> ;
    using SRC3 = RSTCTL_RSTCTL_HARDRESET_STAT_SRC_Values<RSTCTL::RSTCTL_HARDRESET_STAT, 3, 1, ReadMode, RSTCTLRSTCTL_HARDRESET_STATBase> ;
    using SRC4 = RSTCTL_RSTCTL_HARDRESET_STAT_SRC_Values<RSTCTL::RSTCTL_HARDRESET_STAT, 4, 1, ReadMode, RSTCTLRSTCTL_HARDRESET_STATBase> ;
    using SRC5 = RSTCTL_RSTCTL_HARDRESET_STAT_SRC_Values<RSTCTL::RSTCTL_HARDRESET_STAT, 5, 1, ReadMode, RSTCTLRSTCTL_HARDRESET_STATBase> ;
    using SRC6 = RSTCTL_RSTCTL_HARDRESET_STAT_SRC_Values<RSTCTL::RSTCTL_HARDRESET_STAT, 6, 1, ReadMode, RSTCTLRSTCTL_HARDRESET_STATBase> ;
    using SRC7 = RSTCTL_RSTCTL_HARDRESET_STAT_SRC_Values<RSTCTL::RSTCTL_HARDRESET_STAT, 7, 1, ReadMode, RSTCTLRSTCTL_HARDRESET_STATBase> ;
    using SRC8 = RSTCTL_RSTCTL_HARDRESET_STAT_SRC_Values<RSTCTL::RSTCTL_HARDRESET_STAT, 8, 1, ReadMode, RSTCTLRSTCTL_HARDRESET_STATBase> ;
    using SRC9 = RSTCTL_RSTCTL_HARDRESET_STAT_SRC_Values<RSTCTL::RSTCTL_HARDRESET_STAT, 9, 1, ReadMode, RSTCTLRSTCTL_HARDRESET_STATBase> ;
    using SRC10 = RSTCTL_RSTCTL_HARDRESET_STAT_SRC_Values<RSTCTL::RSTCTL_HARDRESET_STAT, 10, 1, ReadMode, RSTCTLRSTCTL_HARDRESET_STATBase> ;
    using SRC11 = RSTCTL_RSTCTL_HARDRESET_STAT_SRC_Values<RSTCTL::RSTCTL_HARDRESET_STAT, 11, 1, ReadMode, RSTCTLRSTCTL_HARDRESET_STATBase> ;
    using SRC12 = RSTCTL_RSTCTL_HARDRESET_STAT_SRC_Values<RSTCTL::RSTCTL_HARDRESET_STAT, 12, 1, ReadMode, RSTCTLRSTCTL_HARDRESET_STATBase> ;
    using SRC13 = RSTCTL_RSTCTL_HARDRESET_STAT_SRC_Values<RSTCTL::RSTCTL_HARDRESET_STAT, 13, 1, ReadMode, RSTCTLRSTCTL_HARDRESET_STATBase> ;
    using SRC14 = RSTCTL_RSTCTL_HARDRESET_STAT_SRC_Values<RSTCTL::RSTCTL_HARDRESET_STAT, 14, 1, ReadMode, RSTCTLRSTCTL_HARDRESET_STATBase> ;
    using SRC15 = RSTCTL_RSTCTL_HARDRESET_STAT_SRC_Values<RSTCTL::RSTCTL_HARDRESET_STAT, 15, 1, ReadMode, RSTCTLRSTCTL_HARDRESET_STATBase> ;
  } ;

  template<typename... T> 
  using RSTCTL_HARDRESET_STATPack  = Register<0xE0042004, 32, ReadMode, RSTCTLRSTCTL_HARDRESET_STATBase, T...> ;

  struct RSTCTLRSTCTL_HARDRESET_CLRBase {} ;

  struct RSTCTL_HARDRESET_CLR : public RegisterBase<0xE0042008, 32, ReadWriteMode>
  {
    using SRC0 = RSTCTL_RSTCTL_HARDRESET_CLR_SRC_Values<RSTCTL::RSTCTL_HARDRESET_CLR, 0, 1, WriteMode, RSTCTLRSTCTL_HARDRESET_CLRBase> ;
    using SRC1 = RSTCTL_RSTCTL_HARDRESET_CLR_SRC_Values<RSTCTL::RSTCTL_HARDRESET_CLR, 1, 1, WriteMode, RSTCTLRSTCTL_HARDRESET_CLRBase> ;
    using SRC2 = RSTCTL_RSTCTL_HARDRESET_CLR_SRC_Values<RSTCTL::RSTCTL_HARDRESET_CLR, 2, 1, WriteMode, RSTCTLRSTCTL_HARDRESET_CLRBase> ;
    using SRC3 = RSTCTL_RSTCTL_HARDRESET_CLR_SRC_Values<RSTCTL::RSTCTL_HARDRESET_CLR, 3, 1, WriteMode, RSTCTLRSTCTL_HARDRESET_CLRBase> ;
    using SRC4 = RSTCTL_RSTCTL_HARDRESET_CLR_SRC_Values<RSTCTL::RSTCTL_HARDRESET_CLR, 4, 1, WriteMode, RSTCTLRSTCTL_HARDRESET_CLRBase> ;
    using SRC5 = RSTCTL_RSTCTL_HARDRESET_CLR_SRC_Values<RSTCTL::RSTCTL_HARDRESET_CLR, 5, 1, WriteMode, RSTCTLRSTCTL_HARDRESET_CLRBase> ;
    using SRC6 = RSTCTL_RSTCTL_HARDRESET_CLR_SRC_Values<RSTCTL::RSTCTL_HARDRESET_CLR, 6, 1, WriteMode, RSTCTLRSTCTL_HARDRESET_CLRBase> ;
    using SRC7 = RSTCTL_RSTCTL_HARDRESET_CLR_SRC_Values<RSTCTL::RSTCTL_HARDRESET_CLR, 7, 1, WriteMode, RSTCTLRSTCTL_HARDRESET_CLRBase> ;
    using SRC8 = RSTCTL_RSTCTL_HARDRESET_CLR_SRC_Values<RSTCTL::RSTCTL_HARDRESET_CLR, 8, 1, WriteMode, RSTCTLRSTCTL_HARDRESET_CLRBase> ;
    using SRC9 = RSTCTL_RSTCTL_HARDRESET_CLR_SRC_Values<RSTCTL::RSTCTL_HARDRESET_CLR, 9, 1, WriteMode, RSTCTLRSTCTL_HARDRESET_CLRBase> ;
    using SRC10 = RSTCTL_RSTCTL_HARDRESET_CLR_SRC_Values<RSTCTL::RSTCTL_HARDRESET_CLR, 10, 1, WriteMode, RSTCTLRSTCTL_HARDRESET_CLRBase> ;
    using SRC11 = RSTCTL_RSTCTL_HARDRESET_CLR_SRC_Values<RSTCTL::RSTCTL_HARDRESET_CLR, 11, 1, WriteMode, RSTCTLRSTCTL_HARDRESET_CLRBase> ;
    using SRC12 = RSTCTL_RSTCTL_HARDRESET_CLR_SRC_Values<RSTCTL::RSTCTL_HARDRESET_CLR, 12, 1, WriteMode, RSTCTLRSTCTL_HARDRESET_CLRBase> ;
    using SRC13 = RSTCTL_RSTCTL_HARDRESET_CLR_SRC_Values<RSTCTL::RSTCTL_HARDRESET_CLR, 13, 1, WriteMode, RSTCTLRSTCTL_HARDRESET_CLRBase> ;
    using SRC14 = RSTCTL_RSTCTL_HARDRESET_CLR_SRC_Values<RSTCTL::RSTCTL_HARDRESET_CLR, 14, 1, WriteMode, RSTCTLRSTCTL_HARDRESET_CLRBase> ;
    using SRC15 = RSTCTL_RSTCTL_HARDRESET_CLR_SRC_Values<RSTCTL::RSTCTL_HARDRESET_CLR, 15, 1, WriteMode, RSTCTLRSTCTL_HARDRESET_CLRBase> ;
  } ;

  template<typename... T> 
  using RSTCTL_HARDRESET_CLRPack  = Register<0xE0042008, 32, ReadWriteMode, RSTCTLRSTCTL_HARDRESET_CLRBase, T...> ;

  struct RSTCTLRSTCTL_HARDRESET_SETBase {} ;

  struct RSTCTL_HARDRESET_SET : public RegisterBase<0xE004200C, 32, ReadWriteMode>
  {
    using SRC0 = RSTCTL_RSTCTL_HARDRESET_SET_SRC_Values<RSTCTL::RSTCTL_HARDRESET_SET, 0, 1, WriteMode, RSTCTLRSTCTL_HARDRESET_SETBase> ;
    using SRC1 = RSTCTL_RSTCTL_HARDRESET_SET_SRC_Values<RSTCTL::RSTCTL_HARDRESET_SET, 1, 1, WriteMode, RSTCTLRSTCTL_HARDRESET_SETBase> ;
    using SRC2 = RSTCTL_RSTCTL_HARDRESET_SET_SRC_Values<RSTCTL::RSTCTL_HARDRESET_SET, 2, 1, WriteMode, RSTCTLRSTCTL_HARDRESET_SETBase> ;
    using SRC3 = RSTCTL_RSTCTL_HARDRESET_SET_SRC_Values<RSTCTL::RSTCTL_HARDRESET_SET, 3, 1, WriteMode, RSTCTLRSTCTL_HARDRESET_SETBase> ;
    using SRC4 = RSTCTL_RSTCTL_HARDRESET_SET_SRC_Values<RSTCTL::RSTCTL_HARDRESET_SET, 4, 1, WriteMode, RSTCTLRSTCTL_HARDRESET_SETBase> ;
    using SRC5 = RSTCTL_RSTCTL_HARDRESET_SET_SRC_Values<RSTCTL::RSTCTL_HARDRESET_SET, 5, 1, WriteMode, RSTCTLRSTCTL_HARDRESET_SETBase> ;
    using SRC6 = RSTCTL_RSTCTL_HARDRESET_SET_SRC_Values<RSTCTL::RSTCTL_HARDRESET_SET, 6, 1, WriteMode, RSTCTLRSTCTL_HARDRESET_SETBase> ;
    using SRC7 = RSTCTL_RSTCTL_HARDRESET_SET_SRC_Values<RSTCTL::RSTCTL_HARDRESET_SET, 7, 1, WriteMode, RSTCTLRSTCTL_HARDRESET_SETBase> ;
    using SRC8 = RSTCTL_RSTCTL_HARDRESET_SET_SRC_Values<RSTCTL::RSTCTL_HARDRESET_SET, 8, 1, WriteMode, RSTCTLRSTCTL_HARDRESET_SETBase> ;
    using SRC9 = RSTCTL_RSTCTL_HARDRESET_SET_SRC_Values<RSTCTL::RSTCTL_HARDRESET_SET, 9, 1, WriteMode, RSTCTLRSTCTL_HARDRESET_SETBase> ;
    using SRC10 = RSTCTL_RSTCTL_HARDRESET_SET_SRC_Values<RSTCTL::RSTCTL_HARDRESET_SET, 10, 1, WriteMode, RSTCTLRSTCTL_HARDRESET_SETBase> ;
    using SRC11 = RSTCTL_RSTCTL_HARDRESET_SET_SRC_Values<RSTCTL::RSTCTL_HARDRESET_SET, 11, 1, WriteMode, RSTCTLRSTCTL_HARDRESET_SETBase> ;
    using SRC12 = RSTCTL_RSTCTL_HARDRESET_SET_SRC_Values<RSTCTL::RSTCTL_HARDRESET_SET, 12, 1, WriteMode, RSTCTLRSTCTL_HARDRESET_SETBase> ;
    using SRC13 = RSTCTL_RSTCTL_HARDRESET_SET_SRC_Values<RSTCTL::RSTCTL_HARDRESET_SET, 13, 1, WriteMode, RSTCTLRSTCTL_HARDRESET_SETBase> ;
    using SRC14 = RSTCTL_RSTCTL_HARDRESET_SET_SRC_Values<RSTCTL::RSTCTL_HARDRESET_SET, 14, 1, WriteMode, RSTCTLRSTCTL_HARDRESET_SETBase> ;
    using SRC15 = RSTCTL_RSTCTL_HARDRESET_SET_SRC_Values<RSTCTL::RSTCTL_HARDRESET_SET, 15, 1, WriteMode, RSTCTLRSTCTL_HARDRESET_SETBase> ;
  } ;

  template<typename... T> 
  using RSTCTL_HARDRESET_SETPack  = Register<0xE004200C, 32, ReadWriteMode, RSTCTLRSTCTL_HARDRESET_SETBase, T...> ;

  struct RSTCTLRSTCTL_SOFTRESET_STATBase {} ;

  struct RSTCTL_SOFTRESET_STAT : public RegisterBase<0xE0042010, 32, ReadMode>
  {
    using SRC0 = RSTCTL_RSTCTL_SOFTRESET_STAT_SRC_Values<RSTCTL::RSTCTL_SOFTRESET_STAT, 0, 1, ReadMode, RSTCTLRSTCTL_SOFTRESET_STATBase> ;
    using SRC1 = RSTCTL_RSTCTL_SOFTRESET_STAT_SRC_Values<RSTCTL::RSTCTL_SOFTRESET_STAT, 1, 1, ReadMode, RSTCTLRSTCTL_SOFTRESET_STATBase> ;
    using SRC2 = RSTCTL_RSTCTL_SOFTRESET_STAT_SRC_Values<RSTCTL::RSTCTL_SOFTRESET_STAT, 2, 1, ReadMode, RSTCTLRSTCTL_SOFTRESET_STATBase> ;
    using SRC3 = RSTCTL_RSTCTL_SOFTRESET_STAT_SRC_Values<RSTCTL::RSTCTL_SOFTRESET_STAT, 3, 1, ReadMode, RSTCTLRSTCTL_SOFTRESET_STATBase> ;
    using SRC4 = RSTCTL_RSTCTL_SOFTRESET_STAT_SRC_Values<RSTCTL::RSTCTL_SOFTRESET_STAT, 4, 1, ReadMode, RSTCTLRSTCTL_SOFTRESET_STATBase> ;
    using SRC5 = RSTCTL_RSTCTL_SOFTRESET_STAT_SRC_Values<RSTCTL::RSTCTL_SOFTRESET_STAT, 5, 1, ReadMode, RSTCTLRSTCTL_SOFTRESET_STATBase> ;
    using SRC6 = RSTCTL_RSTCTL_SOFTRESET_STAT_SRC_Values<RSTCTL::RSTCTL_SOFTRESET_STAT, 6, 1, ReadMode, RSTCTLRSTCTL_SOFTRESET_STATBase> ;
    using SRC7 = RSTCTL_RSTCTL_SOFTRESET_STAT_SRC_Values<RSTCTL::RSTCTL_SOFTRESET_STAT, 7, 1, ReadMode, RSTCTLRSTCTL_SOFTRESET_STATBase> ;
    using SRC8 = RSTCTL_RSTCTL_SOFTRESET_STAT_SRC_Values<RSTCTL::RSTCTL_SOFTRESET_STAT, 8, 1, ReadMode, RSTCTLRSTCTL_SOFTRESET_STATBase> ;
    using SRC9 = RSTCTL_RSTCTL_SOFTRESET_STAT_SRC_Values<RSTCTL::RSTCTL_SOFTRESET_STAT, 9, 1, ReadMode, RSTCTLRSTCTL_SOFTRESET_STATBase> ;
    using SRC10 = RSTCTL_RSTCTL_SOFTRESET_STAT_SRC_Values<RSTCTL::RSTCTL_SOFTRESET_STAT, 10, 1, ReadMode, RSTCTLRSTCTL_SOFTRESET_STATBase> ;
    using SRC11 = RSTCTL_RSTCTL_SOFTRESET_STAT_SRC_Values<RSTCTL::RSTCTL_SOFTRESET_STAT, 11, 1, ReadMode, RSTCTLRSTCTL_SOFTRESET_STATBase> ;
    using SRC12 = RSTCTL_RSTCTL_SOFTRESET_STAT_SRC_Values<RSTCTL::RSTCTL_SOFTRESET_STAT, 12, 1, ReadMode, RSTCTLRSTCTL_SOFTRESET_STATBase> ;
    using SRC13 = RSTCTL_RSTCTL_SOFTRESET_STAT_SRC_Values<RSTCTL::RSTCTL_SOFTRESET_STAT, 13, 1, ReadMode, RSTCTLRSTCTL_SOFTRESET_STATBase> ;
    using SRC14 = RSTCTL_RSTCTL_SOFTRESET_STAT_SRC_Values<RSTCTL::RSTCTL_SOFTRESET_STAT, 14, 1, ReadMode, RSTCTLRSTCTL_SOFTRESET_STATBase> ;
    using SRC15 = RSTCTL_RSTCTL_SOFTRESET_STAT_SRC_Values<RSTCTL::RSTCTL_SOFTRESET_STAT, 15, 1, ReadMode, RSTCTLRSTCTL_SOFTRESET_STATBase> ;
  } ;

  template<typename... T> 
  using RSTCTL_SOFTRESET_STATPack  = Register<0xE0042010, 32, ReadMode, RSTCTLRSTCTL_SOFTRESET_STATBase, T...> ;

  struct RSTCTLRSTCTL_SOFTRESET_CLRBase {} ;

  struct RSTCTL_SOFTRESET_CLR : public RegisterBase<0xE0042014, 32, ReadWriteMode>
  {
    using SRC0 = RSTCTL_RSTCTL_SOFTRESET_CLR_SRC_Values<RSTCTL::RSTCTL_SOFTRESET_CLR, 0, 1, WriteMode, RSTCTLRSTCTL_SOFTRESET_CLRBase> ;
    using SRC1 = RSTCTL_RSTCTL_SOFTRESET_CLR_SRC_Values<RSTCTL::RSTCTL_SOFTRESET_CLR, 1, 1, WriteMode, RSTCTLRSTCTL_SOFTRESET_CLRBase> ;
    using SRC2 = RSTCTL_RSTCTL_SOFTRESET_CLR_SRC_Values<RSTCTL::RSTCTL_SOFTRESET_CLR, 2, 1, WriteMode, RSTCTLRSTCTL_SOFTRESET_CLRBase> ;
    using SRC3 = RSTCTL_RSTCTL_SOFTRESET_CLR_SRC_Values<RSTCTL::RSTCTL_SOFTRESET_CLR, 3, 1, WriteMode, RSTCTLRSTCTL_SOFTRESET_CLRBase> ;
    using SRC4 = RSTCTL_RSTCTL_SOFTRESET_CLR_SRC_Values<RSTCTL::RSTCTL_SOFTRESET_CLR, 4, 1, WriteMode, RSTCTLRSTCTL_SOFTRESET_CLRBase> ;
    using SRC5 = RSTCTL_RSTCTL_SOFTRESET_CLR_SRC_Values<RSTCTL::RSTCTL_SOFTRESET_CLR, 5, 1, WriteMode, RSTCTLRSTCTL_SOFTRESET_CLRBase> ;
    using SRC6 = RSTCTL_RSTCTL_SOFTRESET_CLR_SRC_Values<RSTCTL::RSTCTL_SOFTRESET_CLR, 6, 1, WriteMode, RSTCTLRSTCTL_SOFTRESET_CLRBase> ;
    using SRC7 = RSTCTL_RSTCTL_SOFTRESET_CLR_SRC_Values<RSTCTL::RSTCTL_SOFTRESET_CLR, 7, 1, WriteMode, RSTCTLRSTCTL_SOFTRESET_CLRBase> ;
    using SRC8 = RSTCTL_RSTCTL_SOFTRESET_CLR_SRC_Values<RSTCTL::RSTCTL_SOFTRESET_CLR, 8, 1, WriteMode, RSTCTLRSTCTL_SOFTRESET_CLRBase> ;
    using SRC9 = RSTCTL_RSTCTL_SOFTRESET_CLR_SRC_Values<RSTCTL::RSTCTL_SOFTRESET_CLR, 9, 1, WriteMode, RSTCTLRSTCTL_SOFTRESET_CLRBase> ;
    using SRC10 = RSTCTL_RSTCTL_SOFTRESET_CLR_SRC_Values<RSTCTL::RSTCTL_SOFTRESET_CLR, 10, 1, WriteMode, RSTCTLRSTCTL_SOFTRESET_CLRBase> ;
    using SRC11 = RSTCTL_RSTCTL_SOFTRESET_CLR_SRC_Values<RSTCTL::RSTCTL_SOFTRESET_CLR, 11, 1, WriteMode, RSTCTLRSTCTL_SOFTRESET_CLRBase> ;
    using SRC12 = RSTCTL_RSTCTL_SOFTRESET_CLR_SRC_Values<RSTCTL::RSTCTL_SOFTRESET_CLR, 12, 1, WriteMode, RSTCTLRSTCTL_SOFTRESET_CLRBase> ;
    using SRC13 = RSTCTL_RSTCTL_SOFTRESET_CLR_SRC_Values<RSTCTL::RSTCTL_SOFTRESET_CLR, 13, 1, WriteMode, RSTCTLRSTCTL_SOFTRESET_CLRBase> ;
    using SRC14 = RSTCTL_RSTCTL_SOFTRESET_CLR_SRC_Values<RSTCTL::RSTCTL_SOFTRESET_CLR, 14, 1, WriteMode, RSTCTLRSTCTL_SOFTRESET_CLRBase> ;
    using SRC15 = RSTCTL_RSTCTL_SOFTRESET_CLR_SRC_Values<RSTCTL::RSTCTL_SOFTRESET_CLR, 15, 1, WriteMode, RSTCTLRSTCTL_SOFTRESET_CLRBase> ;
  } ;

  template<typename... T> 
  using RSTCTL_SOFTRESET_CLRPack  = Register<0xE0042014, 32, ReadWriteMode, RSTCTLRSTCTL_SOFTRESET_CLRBase, T...> ;

  struct RSTCTLRSTCTL_SOFTRESET_SETBase {} ;

  struct RSTCTL_SOFTRESET_SET : public RegisterBase<0xE0042018, 32, ReadWriteMode>
  {
    using SRC0 = RSTCTL_RSTCTL_SOFTRESET_SET_SRC_Values<RSTCTL::RSTCTL_SOFTRESET_SET, 0, 1, WriteMode, RSTCTLRSTCTL_SOFTRESET_SETBase> ;
    using SRC1 = RSTCTL_RSTCTL_SOFTRESET_SET_SRC_Values<RSTCTL::RSTCTL_SOFTRESET_SET, 1, 1, WriteMode, RSTCTLRSTCTL_SOFTRESET_SETBase> ;
    using SRC2 = RSTCTL_RSTCTL_SOFTRESET_SET_SRC_Values<RSTCTL::RSTCTL_SOFTRESET_SET, 2, 1, WriteMode, RSTCTLRSTCTL_SOFTRESET_SETBase> ;
    using SRC3 = RSTCTL_RSTCTL_SOFTRESET_SET_SRC_Values<RSTCTL::RSTCTL_SOFTRESET_SET, 3, 1, WriteMode, RSTCTLRSTCTL_SOFTRESET_SETBase> ;
    using SRC4 = RSTCTL_RSTCTL_SOFTRESET_SET_SRC_Values<RSTCTL::RSTCTL_SOFTRESET_SET, 4, 1, WriteMode, RSTCTLRSTCTL_SOFTRESET_SETBase> ;
    using SRC5 = RSTCTL_RSTCTL_SOFTRESET_SET_SRC_Values<RSTCTL::RSTCTL_SOFTRESET_SET, 5, 1, WriteMode, RSTCTLRSTCTL_SOFTRESET_SETBase> ;
    using SRC6 = RSTCTL_RSTCTL_SOFTRESET_SET_SRC_Values<RSTCTL::RSTCTL_SOFTRESET_SET, 6, 1, WriteMode, RSTCTLRSTCTL_SOFTRESET_SETBase> ;
    using SRC7 = RSTCTL_RSTCTL_SOFTRESET_SET_SRC_Values<RSTCTL::RSTCTL_SOFTRESET_SET, 7, 1, WriteMode, RSTCTLRSTCTL_SOFTRESET_SETBase> ;
    using SRC8 = RSTCTL_RSTCTL_SOFTRESET_SET_SRC_Values<RSTCTL::RSTCTL_SOFTRESET_SET, 8, 1, WriteMode, RSTCTLRSTCTL_SOFTRESET_SETBase> ;
    using SRC9 = RSTCTL_RSTCTL_SOFTRESET_SET_SRC_Values<RSTCTL::RSTCTL_SOFTRESET_SET, 9, 1, WriteMode, RSTCTLRSTCTL_SOFTRESET_SETBase> ;
    using SRC10 = RSTCTL_RSTCTL_SOFTRESET_SET_SRC_Values<RSTCTL::RSTCTL_SOFTRESET_SET, 10, 1, WriteMode, RSTCTLRSTCTL_SOFTRESET_SETBase> ;
    using SRC11 = RSTCTL_RSTCTL_SOFTRESET_SET_SRC_Values<RSTCTL::RSTCTL_SOFTRESET_SET, 11, 1, WriteMode, RSTCTLRSTCTL_SOFTRESET_SETBase> ;
    using SRC12 = RSTCTL_RSTCTL_SOFTRESET_SET_SRC_Values<RSTCTL::RSTCTL_SOFTRESET_SET, 12, 1, WriteMode, RSTCTLRSTCTL_SOFTRESET_SETBase> ;
    using SRC13 = RSTCTL_RSTCTL_SOFTRESET_SET_SRC_Values<RSTCTL::RSTCTL_SOFTRESET_SET, 13, 1, WriteMode, RSTCTLRSTCTL_SOFTRESET_SETBase> ;
    using SRC14 = RSTCTL_RSTCTL_SOFTRESET_SET_SRC_Values<RSTCTL::RSTCTL_SOFTRESET_SET, 14, 1, WriteMode, RSTCTLRSTCTL_SOFTRESET_SETBase> ;
    using SRC15 = RSTCTL_RSTCTL_SOFTRESET_SET_SRC_Values<RSTCTL::RSTCTL_SOFTRESET_SET, 15, 1, WriteMode, RSTCTLRSTCTL_SOFTRESET_SETBase> ;
  } ;

  template<typename... T> 
  using RSTCTL_SOFTRESET_SETPack  = Register<0xE0042018, 32, ReadWriteMode, RSTCTLRSTCTL_SOFTRESET_SETBase, T...> ;

  struct RSTCTLRSTCTL_PSSRESET_STATBase {} ;

  struct RSTCTL_PSSRESET_STAT : public RegisterBase<0xE0042100, 32, ReadMode>
  {
    using SVSMH = RSTCTL_RSTCTL_PSSRESET_STAT_SVSMH_Values<RSTCTL::RSTCTL_PSSRESET_STAT, 1, 1, ReadMode, RSTCTLRSTCTL_PSSRESET_STATBase> ;
    using BGREF = RSTCTL_RSTCTL_PSSRESET_STAT_BGREF_Values<RSTCTL::RSTCTL_PSSRESET_STAT, 2, 1, ReadMode, RSTCTLRSTCTL_PSSRESET_STATBase> ;
    using VCCDET = RSTCTL_RSTCTL_PSSRESET_STAT_VCCDET_Values<RSTCTL::RSTCTL_PSSRESET_STAT, 3, 1, ReadMode, RSTCTLRSTCTL_PSSRESET_STATBase> ;
    using SVSL = RSTCTL_RSTCTL_PSSRESET_STAT_SVSL_Values<RSTCTL::RSTCTL_PSSRESET_STAT, 0, 1, ReadMode, RSTCTLRSTCTL_PSSRESET_STATBase> ;
  } ;

  template<typename... T> 
  using RSTCTL_PSSRESET_STATPack  = Register<0xE0042100, 32, ReadMode, RSTCTLRSTCTL_PSSRESET_STATBase, T...> ;

  struct RSTCTLRSTCTL_PSSRESET_CLRBase {} ;

  struct RSTCTL_PSSRESET_CLR : public RegisterBase<0xE0042104, 32, ReadWriteMode>
  {
    using CLR = RSTCTL_RSTCTL_PSSRESET_CLR_CLR_Values<RSTCTL::RSTCTL_PSSRESET_CLR, 0, 1, WriteMode, RSTCTLRSTCTL_PSSRESET_CLRBase> ;
  } ;

  template<typename... T> 
  using RSTCTL_PSSRESET_CLRPack  = Register<0xE0042104, 32, ReadWriteMode, RSTCTLRSTCTL_PSSRESET_CLRBase, T...> ;

  struct RSTCTLRSTCTL_PCMRESET_STATBase {} ;

  struct RSTCTL_PCMRESET_STAT : public RegisterBase<0xE0042108, 32, ReadMode>
  {
    using LPM35 = RSTCTL_RSTCTL_PCMRESET_STAT_LPM_Values<RSTCTL::RSTCTL_PCMRESET_STAT, 0, 1, ReadMode, RSTCTLRSTCTL_PCMRESET_STATBase> ;
    using LPM45 = RSTCTL_RSTCTL_PCMRESET_STAT_LPM_Values<RSTCTL::RSTCTL_PCMRESET_STAT, 1, 1, ReadMode, RSTCTLRSTCTL_PCMRESET_STATBase> ;
  } ;

  template<typename... T> 
  using RSTCTL_PCMRESET_STATPack  = Register<0xE0042108, 32, ReadMode, RSTCTLRSTCTL_PCMRESET_STATBase, T...> ;

  struct RSTCTLRSTCTL_PCMRESET_CLRBase {} ;

  struct RSTCTL_PCMRESET_CLR : public RegisterBase<0xE004210C, 32, ReadWriteMode>
  {
    using CLR = RSTCTL_RSTCTL_PCMRESET_CLR_CLR_Values<RSTCTL::RSTCTL_PCMRESET_CLR, 0, 1, WriteMode, RSTCTLRSTCTL_PCMRESET_CLRBase> ;
  } ;

  template<typename... T> 
  using RSTCTL_PCMRESET_CLRPack  = Register<0xE004210C, 32, ReadWriteMode, RSTCTLRSTCTL_PCMRESET_CLRBase, T...> ;

  struct RSTCTLRSTCTL_PINRESET_STATBase {} ;

  struct RSTCTL_PINRESET_STAT : public RegisterBase<0xE0042110, 32, ReadMode>
  {
    using RSTNMI = RSTCTL_RSTCTL_PINRESET_STAT_RSTNMI_Values<RSTCTL::RSTCTL_PINRESET_STAT, 0, 1, ReadMode, RSTCTLRSTCTL_PINRESET_STATBase> ;
  } ;

  template<typename... T> 
  using RSTCTL_PINRESET_STATPack  = Register<0xE0042110, 32, ReadMode, RSTCTLRSTCTL_PINRESET_STATBase, T...> ;

  struct RSTCTLRSTCTL_PINRESET_CLRBase {} ;

  struct RSTCTL_PINRESET_CLR : public RegisterBase<0xE0042114, 32, ReadWriteMode>
  {
    using CLR = RSTCTL_RSTCTL_PINRESET_CLR_CLR_Values<RSTCTL::RSTCTL_PINRESET_CLR, 0, 1, WriteMode, RSTCTLRSTCTL_PINRESET_CLRBase> ;
  } ;

  template<typename... T> 
  using RSTCTL_PINRESET_CLRPack  = Register<0xE0042114, 32, ReadWriteMode, RSTCTLRSTCTL_PINRESET_CLRBase, T...> ;

  struct RSTCTLRSTCTL_REBOOTRESET_STATBase {} ;

  struct RSTCTL_REBOOTRESET_STAT : public RegisterBase<0xE0042118, 32, ReadMode>
  {
    using REBOOT = RSTCTL_RSTCTL_REBOOTRESET_STAT_REBOOT_Values<RSTCTL::RSTCTL_REBOOTRESET_STAT, 0, 1, ReadMode, RSTCTLRSTCTL_REBOOTRESET_STATBase> ;
  } ;

  template<typename... T> 
  using RSTCTL_REBOOTRESET_STATPack  = Register<0xE0042118, 32, ReadMode, RSTCTLRSTCTL_REBOOTRESET_STATBase, T...> ;

  struct RSTCTLRSTCTL_REBOOTRESET_CLRBase {} ;

  struct RSTCTL_REBOOTRESET_CLR : public RegisterBase<0xE004211C, 32, ReadWriteMode>
  {
    using CLR = RSTCTL_RSTCTL_REBOOTRESET_CLR_CLR_Values<RSTCTL::RSTCTL_REBOOTRESET_CLR, 0, 1, WriteMode, RSTCTLRSTCTL_REBOOTRESET_CLRBase> ;
  } ;

  template<typename... T> 
  using RSTCTL_REBOOTRESET_CLRPack  = Register<0xE004211C, 32, ReadWriteMode, RSTCTLRSTCTL_REBOOTRESET_CLRBase, T...> ;

  struct RSTCTLRSTCTL_CSRESET_STATBase {} ;

  struct RSTCTL_CSRESET_STAT : public RegisterBase<0xE0042120, 32, ReadMode>
  {
    using DCOR_SHT = RSTCTL_RSTCTL_CSRESET_STAT_DCOR_SHT_Values<RSTCTL::RSTCTL_CSRESET_STAT, 0, 1, ReadMode, RSTCTLRSTCTL_CSRESET_STATBase> ;
  } ;

  template<typename... T> 
  using RSTCTL_CSRESET_STATPack  = Register<0xE0042120, 32, ReadMode, RSTCTLRSTCTL_CSRESET_STATBase, T...> ;

  struct RSTCTLRSTCTL_CSRESET_CLRBase {} ;

  struct RSTCTL_CSRESET_CLR : public RegisterBase<0xE0042124, 32, ReadWriteMode>
  {
    using CLR = RSTCTL_RSTCTL_CSRESET_CLR_CLR_Values<RSTCTL::RSTCTL_CSRESET_CLR, 0, 1, WriteMode, RSTCTLRSTCTL_CSRESET_CLRBase> ;
  } ;

  template<typename... T> 
  using RSTCTL_CSRESET_CLRPack  = Register<0xE0042124, 32, ReadWriteMode, RSTCTLRSTCTL_CSRESET_CLRBase, T...> ;

} ;

#endif //#if !defined(RSTCTLREGISTERS_HPP)
